(function (a) { a.fn.jsonTree = function (d, k) { k = a.extend({ showCheckBox: false, checkBoxText: "Apply Sub Items", checkBoxElementName: "chkApplySub", checkBoxElementId: "chkApplySub", selectedIdElementName: "hdnSelected", selectedItemId: 0, selectedItemIsChecked: false, mandatorySelect: false, lazyLoad: false, lazyRequestUrl: "", lazySendParameterName: "id", lazyLoadMethod: "GET", forceCreate: false, onSelect: function (m, n, o) { } }, k); var j = a(this); var l = ["icon-folder-open", "icon-minus-sign"]; function h(n, m) { if (n) { if (a.isArray(n)) { for (i = 0; i < n.length; i++) { g(n[i], m) } } else { g(n, m) } } return m } function g(q, p) { var s = a("<li></li>"); if (q.Title && q.ItemId) { var n = a("<span></span>").appendTo(s); var m = a("<i></i>").appendTo(n); n.append(q.Title); s.data("additional", q.AdditionalData); s.attr("value", q.ItemId); if ((q.Items && q.Items.length) || q.HasSubItem) { if (k.lazyLoad && q.HasSubItem) { s.addClass("parent_li"); m.addClass("icon-plus-sign"); var o = {}; o[k.lazySendParameterName] = q.ItemId; m.click(function () { a.ajax({ type: k.lazyLoadMethod, url: k.lazyRequestUrl, data: o, dataType: "json", error: function (t) { alert(t) } }).done(function (u) { if (u) { var t = a("<ul></ul>"); h(u, t); s.append(t); m.unbind("click") } }) }) } if (q.Items && q.Items.length) { var r = a("<ul></ul>"); a(q.Items).each(function (t) { h(this, r) }); s.append(r) } } p.append(s) } } function c(m) { m.removeClass("ui-state-highlight") } if (k.forceCreate || !j.data("treeView")) { var e = a("<ul></ul>"); h(d, e); j.addClass("tree well").html(e); j.append(a("<input type='hidden' />").attr("name", k.selectedIdElementName)); var b = a("li:has(ul)", j); b.addClass("parent_li").find(" > span").attr("title", "Collapse this branch"); b.find(" > span i").addClass(l[1]); a("ul", j).on("click", "li > span", function (n) { var q = a(this); var p = q.closest("li"); if (p.hasClass("parent_li") && n.target && n.target.nodeName == "I") { var m = q.parent("li.parent_li").find(" > ul > li"); if (m.is(":visible")) { m.hide("fast"); a(this).attr("title", "Expand this branch").find(" > i").addClass("icon-plus-sign").removeClass("icon-minus-sign") } else { m.show("fast"); q.attr("title", "Collapse this branch").find(" > i").addClass("icon-minus-sign").removeClass("icon-plus-sign") } } else { if (!q.hasClass("ui-state-highlight")) { c(a("span", j)); a('input:checkbox[id="' + k.checkBoxElementId + '"],label[for="' + k.checkBoxElementId + '"]', j).remove(); q.addClass("ui-state-highlight"); j.data("selectedItem", p.val()); a('input[name="' + k.selectedIdElementName + '"]').val(p.val()); j.val(p.val()); if (k.showCheckBox) { var o = a("<label for='" + k.checkBoxElementId + "' ><input type='checkbox' value='true' id='" + k.checkBoxElementId + "' name='" + k.checkBoxElementName + "' /><inpute type='hidden' name='" + k.checkBoxElementName + "' value='false'><small>" + k.checkBoxText + "</small></label>"); if (k.selectedItemId > 0 && k.selectedItemIsChecked == "True") { a(o.find("input[type='checkbox']")[0]).attr("checked", "true") } o.insertAfter(q) } } if (k.onSelect) { k.onSelect(p.val(), p, q) } } n.stopPropagation() }); var f; if (k.selectedItemId > 0) { f = a("li[value='" + k.selectedItemId + "'] > span", j) } else { if (k.mandatorySelect) { f = a("li > span:first", j) } } if (f) { f.trigger("click") } j.data("treeView", j) } } })(jQuery);